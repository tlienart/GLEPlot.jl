name: Build and Deploy
on:
  push:
    branches:
      - main
      - dev

env:
  GLEv: "4.3.2"
  FOLDER: "docs"
  PREFIX: "GLEPlot.jl"
  PURGECSS_CONFIG: "purgecss.config.js"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install GLE
        run: |
            curl -L https://sourceforge.net/projects/glx/files/gle/${{env.GLEv}}/gle-${{env.GLEv}}-Linux.zip/download > gle.zip
            unzip gle.zip
      - uses: tlienart/xranklin-build-action@v3.1
        with:
          BASE_URL_PREFIX: ${{ env.PREFIX }}
          SITE_FOLDER: ${{ env.FOLDER }}
          PREVIEW: ${{ env.PREVIEW }}
          JULIA_PRE: '
            ENV["GLE"] = "gle-${{env.GLEv}}-Linux/bin/gle";
            Pkg.add(url="https://github.com/tlienart/GLEPlot.jl", rev="dev");
            Pkg.add("NodeJS")
            '
          JULIA_POST: '
            using NodeJS;
            td = mktempdir();
            run(pipeline(`$(NodeJS.npm_cmd()) i --prefix $td purgecss postcss postcss-cli autoprefixer svgo`));
            isempty("${{ env.FOLDER }}") || cd("${{ env.FOLDER }}");
            purgecss = `$(NodeJS.nodejs_cmd()) $(td)/node_modules/purgecss/bin/purgecss.js`;
            postcss  = `$(NodeJS.nodejs_cmd()) $(td)/node_modules/postcss-cli/index.js`;
            svgo     = `$(NodeJS.nodejs_cmd()) $(td)/node_modules/svgo/bin/svgo`;
            run(pipeline(`$purgecss --config ${{ env.PURGECSS_CONFIG }}`));
            run(pipeline(`$postcss __site/css/ -r --no-map -u autoprefixer`));
            run(pipeline(`$svgo -f "__site/assets/**/figs-html/"`));
            '
          CLEAR_CACHE: ${{ contains(github.event.head_commit.message, '[clear]') }}
          CACHE_KEY: "franklin-cache"
