name: Deploy docs (2)
on:
  push:
    branches:
      - main
      - dev

env:
  GLEv: '4.3.2'
  FOLDER: "docs2"
  PREVIEW: "preview"
  PREFIX: "GLEPlot.jl"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install GLE
        run: |
            curl -L https://sourceforge.net/projects/glx/files/gle/${{env.GLEv}}/gle-${{env.GLEv}}-Linux.zip/download > gle.zip
            unzip gle.zip
      - uses: tlienart/xranklin-build-action@v3.1
        with:
          BASE_URL_PREFIX: ${{ env.PREFIX }}
          SITE_FOLDER: ${{ env.FOLDER }}
          PREVIEW: ${{ env.PREVIEW }}
          JULIA_PRE: '
            ENV["GLE"] = "gle-${{env.GLEv}}-Linux/bin/gle";
            Pkg.add(url="https://github.com/tlienart/GLEPlot.jl", rev="dev");
            Pkg.add("NodeJS");'
          JULIA_POST: '
            using NodeJS;
            td = mktempdir();
            run(pipeline(`$(NodeJS.npm_cmd()) i --prefix $td purgecss`));
            purger = `$(NodeJS.nodejs_cmd()) $(td)/node_modules/purgecss/bin/purgecss.js`;
            config = "module.exports = {\n  content: [\"${{env.FOLDER}}/__site/index.html\", \"${{env.FOLDER}}/__site/**/*.html\"],\n  css: [\"${{env.FOLDER}}/_css/tailwind.min.css\"],\n  output: \"${{env.FOLDER}}/__site/css/tailwind.min.css\",\n  extractors: [\n    {\n      extractor: content => content.match(/[A-Za-z0-9-_:\\/]+/g) || [],\n      extensions: [\"html\"]\n    }\n  ]\n}\n";
            write("tailwind.config.js", config)
            run(pipeline(`$purger --config tailwind.config.js`));
            '
          CLEAR_CACHE: ${{ contains(github.event.head_commit.message, '[clear]') }}
          CACHE_KEY: "franklin-cache"
